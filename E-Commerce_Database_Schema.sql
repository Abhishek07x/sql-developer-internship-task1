CREATE TABLE "mytable" (
  "-- E-COMMERCE DATABASE SCHEMA" text NULL
);

INSERT INTO "mytable" ("-- E-COMMERCE DATABASE SCHEMA")
VALUES
('-- SQL Developer Internship Task 1'),
('-- Author: [Your Name]'),
('-- Date: August 2025'),
('-- Create Database'),
('CREATE DATABASE IF NOT EXISTS ecommerce_db;'),
('USE ecommerce_db;'),
('-- ============================================='),
('-- TABLE CREATION WITH PROPER NORMALIZATION'),
('-- ============================================='),
('-- 1. CATEGORIES TABLE (Parent table for products)'),
('CREATE TABLE categories ('),
('category_id INT PRIMARY KEY AUTO_INCREMENT'),
('category_name VARCHAR(100) NOT NULL UNIQUE'),
('description TEXT'),
('created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP'),
('updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
(');'),
('-- 2. USERS TABLE (Customers who place orders)'),
('CREATE TABLE users ('),
('user_id INT PRIMARY KEY AUTO_INCREMENT'),
('username VARCHAR(50) NOT NULL UNIQUE'),
('email VARCHAR(100) NOT NULL UNIQUE'),
('password_hash VARCHAR(255) NOT NULL'),
('first_name VARCHAR(50) NOT NULL'),
('last_name VARCHAR(50) NOT NULL'),
('phone VARCHAR(15)'),
('date_of_birth DATE'),
('gender ENUM(''Male'''),
('is_active BOOLEAN DEFAULT TRUE'),
('created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP'),
('updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
(NULL),
('-- Constraints'),
('CONSTRAINT chk_email_format CHECK (email LIKE ''%@%.%'')'),
('CONSTRAINT chk_phone_length CHECK (LENGTH(phone) >= 10)'),
(');'),
('-- 3. ADDRESSES TABLE (Normalized address information)'),
('CREATE TABLE addresses ('),
('address_id INT PRIMARY KEY AUTO_INCREMENT'),
('user_id INT NOT NULL'),
('address_type ENUM(''Home'''),
('street_address VARCHAR(255) NOT NULL'),
('city VARCHAR(100) NOT NULL'),
('state VARCHAR(100) NOT NULL'),
('postal_code VARCHAR(20) NOT NULL'),
('country VARCHAR(100) DEFAULT ''India'''),
('is_default BOOLEAN DEFAULT FALSE'),
('created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP'),
(NULL),
('-- Foreign Key Relationship'),
('FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE'),
(');'),
('-- 4. SUPPLIERS TABLE (Vendors/Suppliers of products)'),
('CREATE TABLE suppliers ('),
('supplier_id INT PRIMARY KEY AUTO_INCREMENT'),
('company_name VARCHAR(150) NOT NULL'),
('contact_person VARCHAR(100)'),
('email VARCHAR(100) UNIQUE'),
('phone VARCHAR(15)'),
('address TEXT'),
('city VARCHAR(100)'),
('country VARCHAR(100) DEFAULT ''India'''),
('is_active BOOLEAN DEFAULT TRUE'),
('created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP'),
(');'),
('-- 5. PRODUCTS TABLE (Main product catalog)'),
('CREATE TABLE products ('),
('product_id INT PRIMARY KEY AUTO_INCREMENT'),
('product_name VARCHAR(200) NOT NULL'),
('product_code VARCHAR(50) UNIQUE NOT NULL'),
('description TEXT'),
('category_id INT NOT NULL'),
('supplier_id INT'),
('price DECIMAL(10'),
('cost_price DECIMAL(10'),
('stock_quantity INT DEFAULT 0'),
('min_stock_level INT DEFAULT 10'),
('weight DECIMAL(8'),
('dimensions VARCHAR(50)'),
('color VARCHAR(50)'),
('size VARCHAR(20)'),
('brand VARCHAR(100)'),
('is_active BOOLEAN DEFAULT TRUE'),
('created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP'),
('updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
(NULL),
('-- Constraints'),
('CONSTRAINT chk_price_positive CHECK (price > 0)'),
('CONSTRAINT chk_stock_non_negative CHECK (stock_quantity >= 0)'),
(NULL),
('-- Foreign Key Relationships'),
('FOREIGN KEY (category_id) REFERENCES categories(category_id) ON DELETE RESTRICT ON UPDATE CASCADE'),
('FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id) ON DELETE SET NULL ON UPDATE CASCADE'),
(NULL),
('-- Indexes for better performance'),
('INDEX idx_product_name (product_name)'),
('INDEX idx_product_code (product_code)'),
('INDEX idx_category (category_id)'),
('INDEX idx_price (price)'),
(');'),
('-- 6. PRODUCT_IMAGES TABLE (Multiple images per product)'),
('CREATE TABLE product_images ('),
('image_id INT PRIMARY KEY AUTO_INCREMENT'),
('product_id INT NOT NULL'),
('image_url VARCHAR(500) NOT NULL'),
('alt_text VARCHAR(200)'),
('is_primary BOOLEAN DEFAULT FALSE'),
('display_order INT DEFAULT 1'),
('created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP'),
(NULL),
('-- Foreign Key Relationship'),
('FOREIGN KEY (product_id) REFERENCES products(product_id) ON DELETE CASCADE ON UPDATE CASCADE'),
(');'),
('-- 7. ORDERS TABLE (Customer orders)'),
('CREATE TABLE orders ('),
('order_id INT PRIMARY KEY AUTO_INCREMENT'),
('order_number VARCHAR(50) UNIQUE NOT NULL'),
('user_id INT NOT NULL'),
('order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP'),
('status ENUM(''Pending'''),
('total_amount DECIMAL(12'),
('discount_amount DECIMAL(10'),
('tax_amount DECIMAL(10'),
('shipping_cost DECIMAL(8'),
('final_amount DECIMAL(12'),
('payment_status ENUM(''Pending'''),
('shipping_address_id INT'),
('billing_address_id INT'),
('notes TEXT'),
('created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP'),
('updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
(NULL),
('-- Constraints'),
('CONSTRAINT chk_amounts_positive CHECK (total_amount >= 0 AND final_amount >= 0)'),
(NULL),
('-- Foreign Key Relationships'),
('FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE RESTRICT ON UPDATE CASCADE'),
('FOREIGN KEY (shipping_address_id) REFERENCES addresses(address_id) ON DELETE SET NULL ON UPDATE CASCADE'),
('FOREIGN KEY (billing_address_id) REFERENCES addresses(address_id) ON DELETE SET NULL ON UPDATE CASCADE'),
(');'),
('-- 8. ORDER_ITEMS TABLE (Items within each order - Junction table)'),
('CREATE TABLE order_items ('),
('order_item_id INT PRIMARY KEY AUTO_INCREMENT'),
('order_id INT NOT NULL'),
('product_id INT NOT NULL'),
('quantity INT NOT NULL'),
('unit_price DECIMAL(10'),
('total_price DECIMAL(12'),
('created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP'),
(NULL),
('-- Constraints'),
('CONSTRAINT chk_quantity_positive CHECK (quantity > 0)'),
('CONSTRAINT chk_unit_price_positive CHECK (unit_price > 0)'),
(NULL),
('-- Foreign Key Relationships'),
('FOREIGN KEY (order_id) REFERENCES orders(order_id) ON DELETE CASCADE ON UPDATE CASCADE'),
('FOREIGN KEY (product_id) REFERENCES products(product_id) ON DELETE RESTRICT ON UPDATE CASCADE'),
(NULL),
('-- Composite Primary Key Alternative (Uncomment if needed)'),
('-- UNIQUE KEY unique_order_product (order_id'),
(');'),
('-- 9. SHOPPING_CART TABLE (User''s cart before placing order)'),
('CREATE TABLE shopping_cart ('),
('cart_id INT PRIMARY KEY AUTO_INCREMENT'),
('user_id INT NOT NULL'),
('product_id INT NOT NULL'),
('quantity INT NOT NULL DEFAULT 1'),
('added_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP'),
('updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
(NULL),
('-- Constraints'),
('CONSTRAINT chk_cart_quantity_positive CHECK (quantity > 0)'),
(NULL),
('-- Foreign Key Relationships'),
('FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE'),
('FOREIGN KEY (product_id) REFERENCES products(product_id) ON DELETE CASCADE ON UPDATE CASCADE'),
(NULL),
('-- Unique constraint to prevent duplicate cart items'),
('UNIQUE KEY unique_user_product (user_id'),
(');'),
('-- 10. PAYMENTS TABLE (Payment information for orders)'),
('CREATE TABLE payments ('),
('payment_id INT PRIMARY KEY AUTO_INCREMENT'),
('order_id INT NOT NULL'),
('payment_method ENUM(''Credit Card'''),
('payment_amount DECIMAL(12'),
('payment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP'),
('payment_status ENUM(''Pending'''),
('transaction_id VARCHAR(100) UNIQUE'),
('gateway_response TEXT'),
('created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP'),
(NULL),
('-- Constraints'),
('CONSTRAINT chk_payment_amount_positive CHECK (payment_amount > 0)'),
(NULL),
('-- Foreign Key Relationship'),
('FOREIGN KEY (order_id) REFERENCES orders(order_id) ON DELETE RESTRICT ON UPDATE CASCADE'),
(');'),
('-- 11. REVIEWS TABLE (Product reviews by customers)'),
('CREATE TABLE reviews ('),
('review_id INT PRIMARY KEY AUTO_INCREMENT'),
('product_id INT NOT NULL'),
('user_id INT NOT NULL'),
('rating INT NOT NULL'),
('review_title VARCHAR(200)'),
('review_text TEXT'),
('is_verified_purchase BOOLEAN DEFAULT FALSE'),
('helpful_count INT DEFAULT 0'),
('created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP'),
('updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'),
(NULL),
('-- Constraints'),
('CONSTRAINT chk_rating_range CHECK (rating >= 1 AND rating <= 5)'),
('CONSTRAINT chk_helpful_count_non_negative CHECK (helpful_count >= 0)'),
(NULL),
('-- Foreign Key Relationships'),
('FOREIGN KEY (product_id) REFERENCES products(product_id) ON DELETE CASCADE ON UPDATE CASCADE'),
('FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE'),
(NULL),
('-- Unique constraint to prevent multiple reviews by same user for same product'),
('UNIQUE KEY unique_user_product_review (user_id'),
(');'),
('-- ============================================='),
('-- INDEXES FOR BETTER PERFORMANCE'),
('-- ============================================='),
('-- Additional indexes for frequently queried columns'),
('CREATE INDEX idx_orders_user_date ON orders(user_id'),
('CREATE INDEX idx_orders_status ON orders(status);'),
('CREATE INDEX idx_products_category_active ON products(category_id'),
('CREATE INDEX idx_reviews_product_rating ON reviews(product_id'),
('CREATE INDEX idx_order_items_order ON order_items(order_id);'),
('-- ============================================='),
('-- SAMPLE DATA INSERTION'),
('-- ============================================='),
('-- Insert Categories'),
('INSERT INTO categories (category_name'),
('(''Electronics'''),
('(''Clothing'''),
('(''Books'''),
('(''Home & Garden'''),
('(''Sports'''),
('-- Insert Suppliers'),
('INSERT INTO suppliers (company_name'),
('(''TechCorp Ltd'''),
('(''Fashion Hub'''),
('(''Book World'''),
('-- Insert Sample Users'),
('INSERT INTO users (username'),
('(''john_doe'''),
('(''jane_smith'''),
('(''bob_wilson'''),
('-- Insert Sample Products'),
('INSERT INTO products (product_name'),
('(''iPhone 15'''),
('(''Samsung T-Shirt'''),
('(''Programming Book'''),
('-- ============================================='),
('-- VIEWS FOR COMMON QUERIES'),
('-- ============================================='),
('-- View for product catalog with category information'),
('CREATE VIEW product_catalog AS'),
('SELECT'),
('p.product_id'),
('p.product_name'),
('p.product_code'),
('p.price'),
('p.stock_quantity'),
('p.brand'),
('c.category_name'),
('s.company_name as supplier_name'),
('p.is_active'),
('FROM products p'),
('JOIN categories c ON p.category_id = c.category_id'),
('LEFT JOIN suppliers s ON p.supplier_id = s.supplier_id'),
('WHERE p.is_active = TRUE;'),
('-- View for order summary'),
('CREATE VIEW order_summary AS'),
('SELECT'),
('o.order_id'),
('o.order_number'),
('CONCAT(u.first_name'),
('o.order_date'),
('o.status'),
('o.final_amount'),
('COUNT(oi.order_item_id) as total_items'),
('FROM orders o'),
('JOIN users u ON o.user_id = u.user_id'),
('LEFT JOIN order_items oi ON o.order_id = oi.order_id'),
('GROUP BY o.order_id'),
('-- ============================================='),
('-- STORED PROCEDURES (OPTIONAL)'),
('-- ============================================='),
('DELIMITER //'),
('-- Procedure to get product details with reviews'),
('CREATE PROCEDURE GetProductDetails(IN p_product_id INT)'),
('BEGIN'),
('-- Product basic information'),
('SELECT'),
('p.*'),
('c.category_name'),
('s.company_name as supplier_name'),
('AVG(r.rating) as avg_rating'),
('COUNT(r.review_id) as review_count'),
('FROM products p'),
('JOIN categories c ON p.category_id = c.category_id'),
('LEFT JOIN suppliers s ON p.supplier_id = s.supplier_id'),
('LEFT JOIN reviews r ON p.product_id = r.product_id'),
('WHERE p.product_id = p_product_id'),
('GROUP BY p.product_id;'),
(NULL),
('-- Product images'),
('SELECT image_url'),
('FROM product_images'),
('WHERE product_id = p_product_id'),
('ORDER BY is_primary DESC'),
(NULL),
('-- Recent reviews'),
('SELECT'),
('r.*'),
('CONCAT(u.first_name'),
('FROM reviews r'),
('JOIN users u ON r.user_id = u.user_id'),
('WHERE r.product_id = p_product_id'),
('ORDER BY r.created_at DESC'),
('LIMIT 10;'),
('END //'),
('DELIMITER ;'),
('-- ============================================='),
('-- DATABASE SCHEMA SUMMARY'),
('-- ============================================='),
('/*'),
('SCHEMA OVERVIEW:'),
('==============='),
('ENTITIES:'),
('1. categories - Product categories'),
('2. users - Customer information'),
('3. addresses - Customer addresses (normalized)'),
('4. suppliers - Product suppliers/vendors'),
('5. products - Main product catalog'),
('6. product_images - Product images (1:many with products)'),
('7. orders - Customer orders'),
('8. order_items - Order line items (many:many between orders and products)'),
('9. shopping_cart - User shopping cart'),
('10. payments - Payment information'),
('11. reviews - Product reviews'),
('KEY RELATIONSHIPS:'),
('- Users can have multiple addresses (1:many)'),
('- Products belong to categories (many:1)'),
('- Products can have multiple images (1:many)'),
('- Orders contain multiple products through order_items (many:many)'),
('- Users can place multiple orders (1:many)'),
('- Products can be reviewed by multiple users (many:many)'),
('- Orders can have multiple payments (1:many)'),
('NORMALIZATION LEVEL: 3NF (Third Normal Form)'),
('- No transitive dependencies'),
('- All non-key attributes depend on primary key'),
('- Addresses separated from users'),
('- Order items separated from orders'),
('CONSTRAINTS IMPLEMENTED:'),
('- Primary Keys: All tables have surrogate keys'),
('- Foreign Keys: Proper referential integrity'),
('- Check Constraints: Data validation (price > 0'),
('- Unique Constraints: Prevent duplicates'),
('- Not Null Constraints: Required fields'),
('PERFORMANCE OPTIMIZATIONS:'),
('- Strategic indexes on frequently queried columns'),
('- Composite indexes for multi-column queries'),
('- Views for common query patterns'),
('*/');
